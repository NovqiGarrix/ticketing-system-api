//! `SeaORM` Entity, @generated by sea-orm-codegen 2.0.0-rc.9

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "room")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub name: String,
    pub capacity: i32,
    pub max_rows: i32,
    pub max_columns: i32,
    pub theater_id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::showtime_room::Entity")]
    ShowtimeRoom,
    #[sea_orm(
        belongs_to = "super::theater::Entity",
        from = "Column::TheaterId",
        to = "super::theater::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Theater,
}

impl Related<super::showtime_room::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ShowtimeRoom.def()
    }
}

impl Related<super::theater::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Theater.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
